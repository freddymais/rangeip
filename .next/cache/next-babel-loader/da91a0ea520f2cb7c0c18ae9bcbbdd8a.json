{"ast":null,"code":"import _regeneratorRuntime from \"/opt/rangeip/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/rangeip/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport puppeteer from \"puppeteer\";\n\nvar _page;\n\nfunction getPage() {\n  return _getPage.apply(this, arguments);\n}\n\nfunction _getPage() {\n  _getPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var browser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!_page) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _page);\n\n          case 2:\n            _context.next = 4;\n            return puppeteer.launch();\n\n          case 4:\n            browser = _context.sent;\n            _context.next = 7;\n            return browser.newPage();\n\n          case 7:\n            _page = _context.sent;\n            return _context.abrupt(\"return\", _page);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPage.apply(this, arguments);\n}\n\nexport function getScreenshot(_x) {\n  return _getScreenshot.apply(this, arguments);\n}\n\nfunction _getScreenshot() {\n  _getScreenshot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(html) {\n    var page, file;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getPage();\n\n          case 2:\n            page = _context2.sent;\n            _context2.next = 5;\n            return page.setViewport({\n              width: 1200,\n              height: 630\n            });\n\n          case 5:\n            _context2.next = 7;\n            return page.setContent(html);\n\n          case 7:\n            _context2.next = 9;\n            return page.screenshot({\n              path: \"print.png\"\n            });\n\n          case 9:\n            file = _context2.sent;\n            return _context2.abrupt(\"return\", file);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getScreenshot.apply(this, arguments);\n}","map":{"version":3,"sources":["/opt/rangeip/pages/api/chromium.ts"],"names":["puppeteer","_page","getPage","launch","browser","newPage","getScreenshot","html","page","setViewport","width","height","setContent","screenshot","path","file"],"mappings":";;AAAA,OAAOA,SAAP,MAAgC,WAAhC;;AAEA,IAAIC,KAAJ;;SAEeC,O;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACMD,KADN;AAAA;AAAA;AAAA;;AAAA,6CAEWA,KAFX;;AAAA;AAAA;AAAA,mBAKwBD,SAAS,CAACG,MAAV,EALxB;;AAAA;AAKQC,YAAAA,OALR;AAAA;AAAA,mBAMgBA,OAAO,CAACC,OAAR,EANhB;;AAAA;AAMEJ,YAAAA,KANF;AAAA,6CAQSA,KART;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWA,gBAAsBK,aAAtB;AAAA;AAAA;;;4EAAO,kBAA6BC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcL,OAAO,EADrB;;AAAA;AACCM,YAAAA,IADD;AAAA;AAAA,mBAECA,IAAI,CAACC,WAAL,CAAiB;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,MAAM,EAAE;AAAvB,aAAjB,CAFD;;AAAA;AAAA;AAAA,mBAGCH,IAAI,CAACI,UAAL,CAAgBL,IAAhB,CAHD;;AAAA;AAAA;AAAA,mBAIcC,IAAI,CAACK,UAAL,CAAgB;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAhB,CAJd;;AAAA;AAICC,YAAAA,IAJD;AAAA,8CAMEA,IANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import puppeteer, { Page } from \"puppeteer\";\n\nlet _page: Page | null;\n\nasync function getPage(): Promise<Page> {\n  if (_page) {\n    return _page;\n  }\n\n  const browser = await puppeteer.launch();\n  _page = await browser.newPage();\n\n  return _page;\n}\n\nexport async function getScreenshot(html: string): Promise<Buffer> {\n  const page = await getPage();\n  await page.setViewport({ width: 1200, height: 630 });\n  await page.setContent(html);\n  const file = await page.screenshot({ path: \"print.png\" });\n\n  return file;\n}\n"]},"metadata":{},"sourceType":"module"}